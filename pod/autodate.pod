---
name: dps-autodate
description: Denops auto date
---

=pod

=head1 dps-autodate

Denops auto date.

Find specific keywords and set dates automatically.

=item before

  Last Change: .

=item after

  Last Change: 2022/06/09 16:59:43.

=head1 Features X<autodate-features>

dps-autodate is a Vim plugin that automatically set dates.

=head1 Installation X<autodate-installation>

If you use L<folke/lazy.nvim|https://github.com/folke/lazy.nvim>.

  {
    "yukimemi/dps-autodate",
    lazy = false,
    dependencies = {
      "vim-denops/denops.vim",
    },
  }

If you use L<yukimemi/dvpm|https://github.com/yukimemi/dvpm>.

  dvpm.add({ url: "yukimemi/dps-autodate" });

=head1 Requirements X<autodate-requirements>

=item [Deno - A modern runtime for JavaScript and TypeScript](https://deno.land/)

=item [vim-denops/denops.vim: üêú An ecosystem of Vim/Neovim which allows developers to write cross-platform plugins in Deno](https://github.com/vim-denops/denops.vim)

=head1 Usage X<autodate-usage>

No special settings are required.
By default, `Last Change: .` keyword to `Last Change: yyyy/MM/dd HH:mm:ss.`.

=head1 Commands X<autodate-commands>

C<:DisableAutodate>                                          X<:DisableAutodate>
Disable auto date.

C<:EnableAutodate>                                            X<:EnableAutodate>
Enable auto backup.

=head1 Config X<autodate-config>

No settings are required. However, the following settings can be made if necessary.

C<g:autodate_debug>                                          X<g:autodate_debug>
Enable debug messages.
default is v:false

C<g:autodate_notify>                                        X<g:autodate_notify>
Whether to `vim.notify` messages during autodate. (Neovim only)
default is v:false

C<g:autodate_config>                                        X<g:autodate_config>
autodate configuration.
default setting is below.

  vim.g.autodate_config = {
    -- filetype. `*` is all filetype.
    ["*"] = {
      ["replace"] = {
        -- replace before (regexp pattern) to replace after.
        -- `now` is current date time.
        -- `format` is deno function. https://deno.land/std/datetime/format.ts
        { "/(.*Last Change.*: ).*\.$/i", "$1${format(now, "yyyy/MM/dd HH:mm:ss")}." },
      },
      -- replace events.
      ["events"] = { "FileWritePre", "BufWritePre" },
      -- replace file name pattern.
      ["pat"] = "*",
      -- How many lines from the beginning of the file to rewrite
      ["head"] = 13,
      -- How many lines from the end of the file to rewrite
      ["tail"] = 13,
    },
  }

=head1 Example X<autodate-example>

  let g:autodate_config = {
    \ "xml": {
    \   "replace": [
    \     ['/^(.*key="version">)[^<]*(<.*)/i', '$1${format(now, "yyyyMMdd_HHmmss")}$2']
    \   ],
    \   "event": ["BufWritePre"],
    \   "pat": ["*.xml", "*.xaml"],
    \   "head": 30,
    \   "tail": 5,
    \ }
    \ }

=item before

  <?xml version="1.0" encoding="utf-8"?>
  <root>
    <func name="Set-Store">
      <set key="VERSION"></set>
    </func>
  </root>

=item after save

  <?xml version="1.0" encoding="utf-8"?>
  <root>
    <func name="Set-Store">
      <set key="VERSION">20220609_165708</set>
    </func>
  </root>

=head1 License X<autodate-license>

Licensed under MIT License.

Copyright (c) 2023 yukimemi

=cut
